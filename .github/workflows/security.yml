name: Security Scanning

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    # Run security scan every Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2
          run_install: false
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run pnpm audit
        id: audit
        run: |
          # Run audit and capture exit code
          pnpm audit --audit-level moderate --prod 2>&1 | tee audit-results.txt
          echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit-results
          path: audit-results.txt
          retention-days: 30
      
      - name: Comment PR with audit results
        if: github.event_name == 'pull_request' && steps.audit.outputs.exit_code != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const auditResults = fs.readFileSync('audit-results.txt', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🚨 Security Audit Found Issues\n\n\`\`\`\n${auditResults}\n\`\`\`\n\nPlease review and fix the security vulnerabilities before merging.`
            });

  snyk-security:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2
          run_install: false
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --all-projects
      
      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif
      
      - name: Monitor with Snyk
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --all-projects

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2
          run_install: false
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install license checker
        run: pnpm add -g license-checker
      
      - name: Check licenses
        run: |
          license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC" --excludePrivatePackages > license-report.txt 2>&1 || true
          cat license-report.txt
      
      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-compliance-report
          path: license-report.txt
          retention-days: 30

  code-scanning:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2
          run_install: false
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build project
        run: pnpm run build:packages
        continue-on-error: true
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, snyk-security, license-compliance, code-scanning]
    if: always()
    
    steps:
      - name: Security scan summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Audit | ${{ needs.dependency-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Snyk Security | ${{ needs.snyk-security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Compliance | ${{ needs.license-compliance.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.code-scanning.result }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.dependency-audit.result }}" == "failure" || "${{ needs.snyk-security.result }}" == "failure" ]]; then
            echo "## ⚠️ Security Issues Found" >> $GITHUB_STEP_SUMMARY
            echo "Please review the security scan results and address any vulnerabilities." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "## ✅ No Critical Security Issues" >> $GITHUB_STEP_SUMMARY
            echo "All security scans passed successfully." >> $GITHUB_STEP_SUMMARY
          fi